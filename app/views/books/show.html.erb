<%= link_to "新着一覧に戻ります", "/index"%>
# jsで動かすためのidとして区別できるように、「js」 をつけることがある
# この部分は、唯一の要素としたいので、idで要素を指定している
<div class="card-show" id="js-card-show" data-user-id="<%= @current_user.id %>" data-book-id="<%= @book.id %>">
  <div class="card-image">
    <% if @book.image.attached? %>
      <%= image_tag @book.image %>
    <% end %>
  </div>
  <div class="card-right">
    <p>作者</p>
    <h1><%= @book.author %></h1>
    <p>タイトル</p>
    <h1><%= @book.title %></h1>
  </div>
  #  1つの本に対して感想は複数存在する
  <div class="card-text">
    <% @impressions.each_with_index do |impressions, index| %>
    <p>題名</p>
    <p><%= impressions.story %></p>
    <p>かんそう</p>
    <p><%= impressions.impressions %></p>
    <div class="card-under">
        <% if Like.find_by(impression_id: impressions.id, user_id: @current_user.id)%>
          #メモ
          #そもそも、link_toはリンク（aタグ）を生成するためのものなので、あまりパラメータを渡して◯◯するという用途に向かない
          #パラメータを渡してなにか処理をする、といった場合はformを使う %>
          <span data-liked="true" data-impression-id="<%= impressions.id %>" class="material-icons hart">favorite</span>
          <span><%= impressions.likes.count %></span>
        <% else %>
          # メモ formのsubmitを何かしらでsubmitしないと行けない
          # 使っているcssライブラリ上の特性上、form-buttonにデザインを当てることが難しいので、既存のspanを使いまわしつつ、jsでsubmitを発火させる
          <span data-liked="false" data-impression-id="<%= impressions.id %>" class="material-icons">favorite</span>
          <span><%= impressions.likes.count %></span>
        <% end %>
    </div>
  </div>
  <div>
    <% if @current_user.id == impressions.user.id %>
    <%= link_to "編集", "/#{impressions.id}/edit" %>
    <%= link_to "削除", "/#{impressions.id}/destroy", :method => :post %>
    <% end %>
  </div>
</div>
</div>

# イコールがないと表示されない。なんか別の書き方　→　render :partial => "post.html.erb", :collection => Post.all, :locals => { :bgcolor => "#ffe6e6" }
<%= render partial: 'books/cards/comments', locals: { impression_id: impressions.id, comments: impressions.comments } %>
<% end %>

<script src="libraryApp/show_book.js">
  
</script>
<%# 通常javascriptの処理は、.jsファイルに記述する。%>
<script>
  // Like処理のsubmitをjavascriptで発火させる
  // idを指定できるようにしているのは、複数のimpression（感想）があって、like-formが複数できる予定だから
  function fireLikeSubmit(id) {
    // document ... 開いているHTMLのページ全部、というくらいの意味
    // forms ... documentにぶら下がっているform一覧。formのidで区別可能
    // forms[id] ... 指定されたid名でformを識別する
    // submit ... submitボタンを押したのと同じ効果
    console.log(id);
    document.forms[id].submit();
  }
</script>